name: Release NPM Package

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'chore(release):') && github.repository_owner == 'iterate-com'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from commit message
        id: version
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | sed -E 's/^chore\(release\): //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        if: steps.version.outputs.version != ''
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          # Check if tag exists before creating
          if ! git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
            git push --tags
          else
            echo "Tag v${{ steps.version.outputs.version }} already exists, skipping creation"
          fi

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Set node
        uses: actions/setup-node@v4
        if: steps.version.outputs.version != ''
        with:
          cache: "pnpm"
          registry-url: https://registry.npmjs.org/
          node-version: 22

      - name: Install dependencies
        if: steps.version.outputs.version != ''
        run: pnpm install

      - name: Create GitHub Release
        if: steps.version.outputs.version != ''
        run: |
          # Check if release exists before creating
          if ! gh release view "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            pnpx changelogithub
          else
            echo "Release v${{ steps.version.outputs.version }} already exists, skipping creation"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create NPM Release
        if: steps.version.outputs.version != ''
        env:
          NPM_CONFIG_PROVENANCE: true
        run: |
          if ! npm view "safe-durable-objects@${{ steps.version.outputs.version }}" version >/dev/null 2>&1; then
            pnpm run publish:npm
          else
            echo "Version ${{ steps.version.outputs.version }} already published to npm, skipping publish"
          fi
